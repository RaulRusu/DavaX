from asyncio import Future
from typing import Protocol, Any
from aiokafka.structs import RecordMetadata

class AsyncKafkaProducer(Protocol):
    async def start(self) -> None: ...
    async def send(self, topic: str, value: Any, key: Any = None) -> Future[RecordMetadata]: ...
    async def stop(self) -> None: ...

class MessageSerializer(Protocol):
    def __call__(self, msg: Any) -> bytes: ...